题目：给定一个升序单链表，构造平衡二叉搜索树

108略

109
中序遍历最左边的元素一定是链表的头部，类似的下一个元素一定是链表的下一个元素，以此递归
1.获取链表中间位置
2.先遍历左子树
3.链表头元素是当前节点
4.遍历右子树
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *m_pHead;
    
    TreeNode* sortedListToBST(ListNode* head) {
        int len = 0;
        for(ListNode *node = head; node!=nullptr; node=node->next) ++len;
        m_pHead = head;
        return constructTree(0, len - 1);
    }
    TreeNode *constructTree(int l, int r)
    {
        if(l > r) return nullptr;
        int m = (l + r) / 2;
        TreeNode *left = constructTree(l, m - 1);
        TreeNode *node = new TreeNode(m_pHead->val);
        node->left = left;
        m_pHead = m_pHead->next;
        node->right = constructTree(m + 1, r);
        return node;
    }
};
